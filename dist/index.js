"use strict";var pt=Object.create;var P=Object.defineProperty;var mt=Object.getOwnPropertyDescriptor;var ft=Object.getOwnPropertyNames;var yt=Object.getPrototypeOf,Tt=Object.prototype.hasOwnProperty;var wt=(r,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of ft(e))!Tt.call(r,a)&&a!==t&&P(r,a,{get:()=>e[a],enumerable:!(o=mt(e,a))||o.enumerable});return r};var h=(r,e,t)=>(t=r!=null?pt(yt(r)):{},wt(e||!r||!r.__esModule?P(t,"default",{value:r,enumerable:!0}):t,r));var g=h(require("express")),nt=h(require("dotenv")),v=h(require("cors")),dt=h(require("path"));var B=require("express");var i=require("sequelize");var S=require("sequelize"),u=new S.Sequelize(process.env.DB_NAME??"",process.env.DB_USERNAME??"",process.env.DB_PW,{host:String(process.env.DB_HOST),port:Number(process.env.DB_PORT),dialect:"postgres"});var d=class extends i.Model{};d.init({id:{type:i.DataTypes.UUID,primaryKey:!0,defaultValue:i.DataTypes.UUIDV4},name:{type:i.DataTypes.STRING,allowNull:!1},description:{type:i.DataTypes.TEXT,allowNull:!1},price:{type:i.DataTypes.DECIMAL(10,2),allowNull:!1},img_url:{type:i.DataTypes.STRING,allowNull:!1},categories:{type:i.DataTypes.ARRAY(i.DataTypes.STRING),allowNull:!1},sizes:{type:i.DataTypes.ARRAY(i.DataTypes.STRING),allowNull:!1},colours:{type:i.DataTypes.ARRAY(i.DataTypes.STRING),allowNull:!1}},{sequelize:u,tableName:"products"});var H=async(r,e)=>{try{let t=r.body;for(let o of t)await d.create({name:o.name,description:o.description,price:o.price,img_url:`${process.env.DOMAIN}/public/${o.name}.jpeg`,categories:o.categories,sizes:o.sizes,colours:o.colours});e.status(201).send()}catch(t){console.error(t),e.status(500).send()}},z=async(r,e)=>{try{let t=await d.findAll();e.status(200).json(t)}catch(t){console.error(t),e.status(500).send()}},G=async(r,e)=>{try{let t=await d.findByPk(r.params.id);if(!t)return e.status(404).send();e.status(200).json(t.toJSON())}catch(t){console.error(t),e.status(500).send()}};var D=(0,B.Router)(),L=D.route("/product");L.post(H);L.get(z);var _t=D.route("/product/:id");_t.get(G);var $=D;var K=require("express"),I=require("express-validator");var q=h(require("firebase-admin")),l=q.default.initializeApp({credential:q.default.credential.cert({projectId:process.env.FIREBASE_PROJECT_ID,privateKey:process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/gm,`
`),clientEmail:process.env.FIREBASE_CLIENT_EMAIL})});var y=require("sequelize");var p=class extends y.Model{};p.init({id:{type:y.DataTypes.UUID,primaryKey:!0,defaultValue:y.DataTypes.UUIDV4},product_id:{type:y.DataTypes.UUID,references:{model:d}},quantity:{type:y.DataTypes.INTEGER,allowNull:!1,validate:{min:0}},colour:{type:y.DataTypes.STRING,allowNull:!1},size:{type:y.DataTypes.STRING,allowNull:!1}},{sequelize:u,tableName:"cart_items"});var b=async r=>(await l.auth().verifyIdToken(r)).uid,j=async(r,e)=>{let t=Array();for(let s of r){let c=await p.findByPk(s);if(!c)throw`No CartItem found with id=${s}`;t.push(c)}let o=!1;for(let s of t)if(e.product_id===s.product_id&&e.colour===s.colour&&e.size===s.size){s.quantity+=e.quantity,o=!0,await p.update({quantity:s.quantity},{where:{id:s.id}});break}if(!o){let s=await p.create({...e});t.push(s)}let a=Array();return t.forEach(s=>{a.push(s.id)}),a};var m=require("sequelize");var n=class extends m.Model{};n.init({id:{type:m.DataTypes.UUID,primaryKey:!0,defaultValue:m.DataTypes.UUIDV4},auth_id:{type:m.DataTypes.STRING,allowNull:!1,unique:!0},cart_item_ids:{type:m.DataTypes.ARRAY(m.DataTypes.UUID),allowNull:!1,defaultValue:[]},order_ids:{type:m.DataTypes.ARRAY(m.DataTypes.UUID),allowNull:!1,defaultValue:[]}},{sequelize:u,tableName:"users"});var J=async(r,e)=>{try{let t=await l.auth().verifyIdToken(r.body.idToken);await n.findOrCreate({where:{auth_id:t.uid},defaults:{auth_id:t.uid}}),e.status(201).send()}catch(t){console.error(t),e.status(500).send()}},V=async(r,e)=>{try{let t=await b(r.params.idToken),o=await n.findOne({where:{auth_id:t}});if(!o)throw`Query returned no users with auth_id = '${t}'`;e.status(200).json(o.toJSON())}catch(t){console.error(t),e.status(500).send()}},M=async(r,e)=>{try{let t=await b(r.params.idToken);await n.destroy({where:{auth_id:t},truncate:!0}),e.status(204).send()}catch(t){console.error(t),e.status(500).send()}};var x=(0,K.Router)(),Rt=x.route("/user");Rt.post((0,I.body)("idToken").notEmpty().isJWT(),J);var W=x.route("/user/:idToken");W.get((0,I.param)("idToken").notEmpty().isJWT(),V);W.delete((0,I.param)("idToken").notEmpty().isJWT(),M);var Y=x;var tt=require("express"),_=require("express-validator");var T=require("sequelize");var w=class extends T.Model{};w.init({id:{type:T.DataTypes.UUID,primaryKey:!0,defaultValue:T.DataTypes.UUIDV4},items:{type:T.DataTypes.ARRAY(T.DataTypes.JSON),allowNull:!1},total:{type:T.DataTypes.DECIMAL(10,2),allowNull:!1},paid:{type:T.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!1}},{sequelize:u,tableName:"orders"});var F=async(r,e)=>{try{let t=await l.auth().verifyIdToken(r.params.idToken),[o,a]=await n.findOrCreate({where:{auth_id:t.uid},defaults:{auth_id:t.uid}});if(a&&console.log("[server] new user created because none was found"),!o)throw`Failed to find or create user with auth_id=${t.uid}`;let s=Array();r.body.items.forEach(C=>{s.push(C.id)});let[c,k]=await n.update({cart_item_ids:s},{where:{id:o.id},returning:!0});e.status(200).json(k[0].toJSON())}catch(t){console.error(t),e.status(500).send()}},Q=async(r,e)=>{try{let t=await l.auth().verifyIdToken(r.params.idToken),o=await n.findOne({where:{auth_id:t.uid}});if(!o)return e.status(404).json(`No user found with auth_id=${t.uid}`);let a=await j(o.cart_item_ids,r.body.item);await n.update({cart_item_ids:a},{where:{auth_id:t.uid}}),e.status(200).send(a)}catch(t){console.error(t),e.status(500).send()}},X=async(r,e)=>{try{let t=await p.findByPk(r.params.id);if(!t)return e.status(404).send();let o=await d.findByPk(t.product_id);if(!o)return e.status(404).send();e.status(200).json({cartItemData:await t.toJSON(),productData:await o.toJSON()})}catch(t){console.error(t),e.status(500).send()}},Z=async(r,e)=>{try{let t=await l.auth().verifyIdToken(r.params.idToken),o=await n.findOne({where:{auth_id:t.uid}});if(!o)return e.status(404).send();let a=Array(),s=0;for(let lt of o.cart_item_ids){let R=await p.findByPk(lt);if(!R)return e.status(404).send();let N=await d.findByPk(R.product_id);if(!N)return e.status(404).send();s+=R.quantity*N.price,a.push({name:N.name,quantity:R.quantity,colour:R.colour,size:R.size,total:R.quantity*N.price})}let c=require("stripe")(process.env.STRIPE_KEY),k=await c.products.create({name:o.id}),C=await c.prices.create({product:k.id,unit_amount:s*100,currency:"GBP"}),O=await w.create({items:a,total:s});await o.update({cart_item_ids:[],order_ids:[...o.order_ids,O.id]});let ct=await c.checkout.sessions.create({line_items:[{price:C.id,quantity:1}],mode:"payment",success_url:`${process.env.CLIENT_URL}/?payment_success=true&order_id=${O.id}`,cancel_url:`${process.env.CLIENT_URL}/?payment_success=false&order_id=${O.id}`});e.status(200).json({url:ct.url})}catch(t){console.error(t),e.status(500).send()}};var A=(0,tt.Router)(),et=A.route("/cart/:idToken");et.put((0,_.param)("idToken").notEmpty().isJWT(),(0,_.body)("items").notEmpty().isArray(),F);et.patch((0,_.param)("idToken").notEmpty().isJWT(),(0,_.body)("item").notEmpty().isObject(),Q);var ht=A.route("/cartItem/:id");ht.get((0,_.param)("id").notEmpty().isUUID(),X);var It=A.route("/checkout/:idToken");It.post((0,_.param)("idToken").notEmpty().isJWT(),Z);var rt=A;var at=require("express"),E=require("express-validator");var ot=async(r,e)=>{try{let t=await l.auth().verifyIdToken(r.params.idToken),o=await n.findOne({where:{auth_id:t.uid}});if(!o)return e.status(404).json(`No user found with auth_id=${t.uid}`);let a=Array();for(let s of o.order_ids){let c=await w.findByPk(s);if(!c)return e.status(404).send();a.push(c)}e.status(200).json(a)}catch(t){console.error(t),e.status(500).send()}},st=async(r,e)=>{try{await w.update({paid:r.body.paid},{where:{id:r.params.id}}),e.status(204).send()}catch(t){console.error(t),e.status(500).send()}};var U=(0,at.Router)(),Et=U.route("/order/:id");Et.patch((0,E.param)("id").notEmpty().isUUID(),(0,E.body)("paid").notEmpty().isBoolean(),st);var gt=U.route("/order/:idToken");gt.get((0,E.param)("idToken").notEmpty().isJWT(),ot);var it=U;var f=(0,g.default)();f.use(g.default.json());f.use(g.default.urlencoded({extended:!0}));nt.default.config();var ut={allowedHeaders:["Content-Type"]};f.use((0,v.default)(ut));f.options("*",(0,v.default)(ut));f.use("/public",g.default.static(dt.default.join(__dirname,"public")));f.use($);f.use(Y);f.use(rt);f.use(it);(async()=>(await u.authenticate(),console.log(`[server] connected to '${u.getDatabaseName()}'`),await u.sync(),console.log(`[server] all models in '${u.getDatabaseName()}' synchronised successfully`)))();f.listen(process.env.PORT,()=>{console.log(`[server] server started on PORT=${process.env.PORT}`),console.log(`[server] DB_HOST=${process.env.DB_HOST}, DB_PORT=${process.env.DB_PORT}`)});
